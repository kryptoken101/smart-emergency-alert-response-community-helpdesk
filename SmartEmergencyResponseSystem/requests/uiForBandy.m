function uiForBandy
    imData = imread('SFHiRes.png');
    theaterXlim = [-122.459450, -122.381392];
    theaterYlim = [37.773665, 37.811574];

    RM = RequestManager;
    
    MIT = shAirConnection('',9527);
    lis = addlistener(MIT,'validDatagramReceived',@newRequest);
    
    mapFig = figure('Name','Mission Map',...
                    'visible','on',...
                    'menubar','none',...
                    'CloseRequestFcn',@cleanup);
    mainMap = axes('Parent',mapFig,...
                   'Position',[0 0 1 1],...
                   'LooseInset',[0.108274411204147 0.096423165532088 0.0791236081876461 0.0657430674082418],...
                   'XTick',[],...
                   'YTick',[],...
                   'XLim',theaterXlim,...
                   'YLim',theaterYlim,...
                   'XLimMode','manual',...
                   'YLimMode','manual',...
                   'SortMethod','ChildOrder');
    mapImage = image('CData',imData,...
                 'parent',mainMap,...
                 'hittest','off',...
                 'ydata',linspace(theaterYlim(2),theaterYlim(1),size(imData,1)),...
                 'xdata',linspace(theaterXlim(1),theaterXlim(2),size(imData,2)));
             
    rqlis = addlistener(RM,'requestAdded',@(~,event)newRequestEventHandler(event.ID));
    
    t=timer('ExecutionMode','FixedRate','Period',120,'TimerFcn',@(~,~)RM.reset);
    start(t)
    
    function newRequestEventHandler(newRequest)
        RequestMarker(mainMap,newRequest);
    end
    
    function newRequest(src,~)
        itemMap = {'Defibrillator';...
                   'Thermal Camera';...
                   'Stabilizer';...
                   'Sterile Band';...
                   'Thermal Blanket';...
                   'Thrombolytics';...
                   'Carbamazepine';...
                   'Oral Airway';...
                   'Endotracheal Tube';...
                   'Sensory Animal';...
                   'Robotic Arm';...
                   'Robot ATLAS'};
        isPickup = (src.lastValidData.pickupDropoff==2);
        src.lastValidData
        itemRequested = ItemFactory.makeItem(itemMap{src.lastValidData.itemID});
        if src.lastValidData.quantity*itemRequested.weight <=QuadCopter.capacity
            RM.addRequest([src.lastValidData.latitude, src.lastValidData.longitude],...
                          itemRequested,...
                          'MIT shAir',...
                          src.lastValidData.priority,...
                          now,...
                          now,...
                          src.lastValidData.quantity,...
                          ~isPickup,...
                          isPickup);
        end
    end

    function cleanup(src,~)
        delete(lis)
        delete(src)
    end
end

